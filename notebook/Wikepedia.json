{
	"name": "Wikepedia",
	"properties": {
		"folder": {
			"name": "Wikipedia"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "FranmerSpark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/5eed10dc-e0d7-42c5-961e-1ccd3b6dd500/resourceGroups/AzureSynapseEastUs1/providers/Microsoft.Synapse/workspaces/franmersynapse2/bigDataPools/FranmerSpark",
				"name": "FranmerSpark",
				"type": "Spark",
				"endpoint": "https://franmersynapse2.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/FranmerSpark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true,
					"tags": [
						"parameters"
					]
				},
				"source": [
					"yearWiki = \"2025\"\r\n",
					"monthWiki = \"05\"\r\n",
					"dayWiki = \"12\""
				],
				"attachments": null,
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from pyspark.sql.types import *\r\n",
					"\r\n",
					"csvSchema = StructType([\r\n",
					"  StructField(\"project\", StringType(), True),\r\n",
					"  StructField(\"page\", StringType(), True),\r\n",
					"  StructField(\"requests\", IntegerType(), True),\r\n",
					"  StructField(\"size\", IntegerType(), True)\r\n",
					" ])\r\n",
					"\r\n",
					"WikipediaDF = spark.read.load('abfss://wikipedia@thevaultgen2.dfs.core.windows.net/z1Wikipedia_datasets/pageviews-*.gz', format='csv', schema= csvSchema, delimiter= \" \" )"
				],
				"attachments": null,
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"WikipediaDF.createOrReplaceTempView(\"pageviews\")"
				],
				"attachments": null,
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"WikipediaDF_Filtered = spark.sql(\"SELECT page, project, SUM(requests) AS requests, {0} AS Year, {1} AS Month, {2} AS Day FROM pageviews GROUP BY page, project\".format(yearWiki, monthWiki, dayWiki))\r\n",
					"WikipediaDF_Filtered.show(10)"
				],
				"attachments": null,
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					},
					"collapsed": true
				},
				"source": [
					"%%spark\r\n",
					"try {\r\n",
					"mssparkutils.fs.rm(\"abfss://wikipedia@thevaultgen2.dfs.core.windows.net/z2Wikipedia_temp\", true)\r\n",
					"} catch {\r\n",
					"  case e:Exception=> println(\"No Folder\")\r\n",
					"}"
				],
				"attachments": null,
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"WikipediaDF_Filtered.coalesce(1).write.parquet(\"abfss://wikipedia@thevaultgen2.dfs.core.windows.net/z2Wikipedia_temp/\")"
				],
				"attachments": null,
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"files = mssparkutils.fs.ls(\"abfss://wikipedia@thevaultgen2.dfs.core.windows.net/z2Wikipedia_temp/\")\r\n",
					"for x in files:\r\n",
					"    if x.name !=\"_SUCCESS\":\r\n",
					"        WikipediaFile = x.path"
				],
				"attachments": null,
				"execution_count": 24
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"WikiepediaDestinationFile = \"abfss://wikipedia@thevaultgen2.dfs.core.windows.net/z3Wikipedia_results/{0}/{1}/{2}/Wikipedia_{0}_{1}_{2}.parquet\".format(yearWiki,monthWiki,dayWiki)\r\n",
					"mssparkutils.fs.cp(WikipediaFile,WikiepediaDestinationFile)"
				],
				"attachments": null,
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					""
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"WikipediaDF_Filtered.createOrReplaceTempView(\"pysparkdftemptable\")"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					},
					"collapsed": true
				},
				"source": [
					"%%spark\r\n",
					"import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
					"import org.apache.spark.sql.SqlAnalyticsConnector._\r\n",
					"\r\n",
					"val scala_df = spark.sqlContext.sql (\"select * from pysparkdftemptable\")\r\n",
					"//scala_df.write.option(Constants.SERVER, \"franmersqlforsynapse.database.windows.net\").franmerSQLSynapseDataMart\r\n",
					"scala_df.write.franmerSQLSynapseDataMart"
				],
				"attachments": null,
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"scala_df.write.option(Constants.SERVER, \"franmersqlforsynapse.database.windows.net\").synapsesql(\"franmerSQLSynapseDataMart.dbo.Wikipedialogs\", Constants.EXTERNAL)"
				],
				"attachments": null,
				"execution_count": null
			}
		]
	}
}